plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.30"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.30"
    id "org.springframework.boot" version "2.1.2.RELEASE"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: "application"
apply plugin: "java"

ext {
    junitVersion = "5.3.2"
    snippetsDir = file("build/generated-snippets")
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    jcenter()
}

tasks {
    test {
        useJUnitPlatform()
        outputs.dir(snippetsDir)
    }

    asciidoctor {
        inputs.dir(snippetsDir)
        dependsOn(test)
    }

    bootJar {
        dependsOn(asciidoctor)
        from("${asciidoctor.outputDir}/html5") {
            into "static/docs"
        }
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+")
    implementation("com.google.guava:guava:27.0.1-jre")
    implementation("org.flywaydb:flyway-core:5.2.4")
    runtime("com.h2database:h2:1.4.199")

    testImplementation("io.mockk:mockk:1.9.3.kotlin12")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit", module: "junit"
        exclude group: "org.mockito", module: "mockito-core"
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }
    testImplementation("org.hamcrest:hamcrest-library:1.3")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc:2.0.3.RELEASE")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

mainClassName = "wild.monitor.WildMonitorAppKt"

compileKotlin { kotlinOptions { jvmTarget = "1.8" }}
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" }}